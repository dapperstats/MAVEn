metablism_trend(animal_metabolism, maven_experiment = "maven.example1")
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = "maven.example1")
devtools::document()
devtools::load_all(".")
maven <- read_maven(maven_datafile = "./maven_output.csv", baseline = F)
maven.cycle <- assign_cyclenumber(maven)
animal_metabolism <- extract_metabolism(maven.cycle)
metablism_trend(animal_metabolism, maven_experiment = "maven.example1")
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = "maven.example1")
maven_raw <- read_maven(maven_datafile = "./maven_output.csv", baseline = T)
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = "maven.example1")
devtools::load_all(".")
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = "maven.example1")
animal_activity <- extract_activity(maven.cycle, metabolism_summary_cycle,
interval = 60, activity_baseline = 0.01)
activity_trend(animal_activity, maven_experiment = "maven.example1")
# Step 7: Generate animal activity summary tables ----
#
# There is currently no calculation for the abs difference sum, but that can be
# added into the pipeline.
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
activity_summary_chamber <- summarize_activity(animal_activity,
type = "by_chamber")
# Step 8: Visual diagnostic of animal activity ----
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle,
maven_experiment = "maven.example1", interval = 60)
devtools::document()
devtools::load_all(".")
# Step 8: Visual diagnostic of animal activity ----
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle,
maven_experiment = "maven.example1", interval = 60)
devtools::document()
devtools::load_all(".")
# Step 8: Visual diagnostic of animal activity ----
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle,
maven_experiment = "maven.example1", interval = 60)
test.out <- maven_datatable(metabolism_summary_cycle, activity_summary_cycle,
maven_experiment = "maven.example1")
devtools::load_all(".")
## Complete analysis workflow ----
evaluate_maven(maven_datafile = "maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1)
devtools::install()
library(MAVEn)
devtools::build()
library(MAVEn)
devtools::build(vignettes = F)
devtools::check(vignettes = F)
devtools::check(vignettes = F)
devtools::check(vignettes = F)
devtools::check(vignettes = F)
devtools::document()
devtools::document()
devtools::document()
devtools::install()
.Last.error.trace
devtools::document()
devtools::install()
devtools::build(vignettes = F)
devtools::check(vignettes = F)
devtools::document()
devtools::install()
devtools::build(vignettes = F)
devtools::check(vignettes = F)
devtools::document()
devtools::check(vignettes = F)
devtools::document()
devtools::check(vignettes = F)
devtools::document()
devtools::install()
devtools::build(vignettes = F)
devtools::check(vignettes = F)
library(MAVEn)
## Evaluate the experimental timecourse ----
maven_raw <- read_maven(datadir = "data", maven_datafile = "./maven_output.csv", baseline = T)
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
library(MAVEn)
## Evaluate the experimental timecourse ----
maven_raw <- read_maven(datadir = "data", maven_datafile = "./maven_output.csv", baseline = T)
plot_maven_overview(maven_raw, maven_experiment = "maven.example1")
devtools::build_vignettes()
?MAVEn
library(MAVEn)
devtools::build_vignettes()
devtools::document()
devtools::install()
library(MAVEn)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
#' @param maven_datafile name of data file to be evaluated. Must be ".csv".
#' @param maven_experiment name of experiment
#' @param interval specified interval for activity calculations. Must be in secoonds and defaults to 60.
#' @param activity_baseline Activity measurement baseline. Used to exclude values from dataset.
#' @param activity_threshold Activity threshold used for calculating activity status (e.g. inactive vs. active)
#' @param figures figures to be produced. Select from "overview", "diag", or "trend". Supply all three in list if you want all to be created.
#'
#' @return
#' @export
#'
evaluate_maven <- function(datadir = "", outdir = "",
maven_datafile = "./maven_output.csv",
maven_experiment = "",
interval = 60,
activity_baseline = 0.01,
activity_threshold = 1,
figures = c("trend","diag","overview")){
fpath <- file.path(outdir)
if(!dir.exists(fpath)){
dir.create(fpath)
}
# Load data
maven_raw <- read_maven(datadir = datadir,
maven_datafile = maven_datafile, baseline = T)
maven <- read_maven(datadir = datadir,
maven_datafile = maven_datafile, baseline = F)
# assign a cycle
maven.cycle <- assign_cyclenumber(maven)
# animal metabolism
animal_metabolism <- extract_metabolism(maven.cycle)
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
#animal activity
animal_activity <- extract_activity(maven.cycle, metabolism_summary_cycle,
interval = interval,
activity_baseline = activity_baseline)
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold =
activity_threshold)
if ("overview" %in% figures) {
plot_maven_overview(maven_raw, maven_experiment = maven_experiment)
}
if ("trend" %in% figures){
metablism_trend(animal_metabolism, maven_experiment = maven_experiment)
activity_trend(animal_activity, maven_experiment = maven_experiment)
}
if ("diag" %in% figures){
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = maven_experiment)
activity_diag(maven_raw, metabolism_summary_cycle,
activity_summary_cycle,
maven_experiment = maven_experiment,
interval = interval)
}
# final data table
out <- maven_datatable(outdir = outdir,
metabolism_summary_cycle, activity_summary_cycle,
maven_experiment = maven_experiment)
return(out)
}
devtools::build_vignettes()
devtools::build()
devtools::check()
library(pander)
devtools::load_all()
maven_raw <- read_maven(datadir = "../data",
maven_datafile = "./maven_output.csv", baseline = T)
setwd("C:/Users/Megan/github_DAPPER/MAVEn/vignettes")
maven_raw <- read_maven(datadir = "../data",
maven_datafile = "./maven_output.csv", baseline = T)
pander(head(maven_raw), split.cells = Inf)
plot_maven_overview(maven_raw, maven_experiment = "maven.example1")
metablism_trend(animal_metabolism, maven_experiment = "maven.example1")
animal_metabolism <- extract_metabolism(maven.cycle)
maven.cycle <- assign_cyclenumber(maven)
maven <- read_maven(datadir = "../data",
maven_datafile = "./maven_output.csv", baseline = F)
maven.cycle <- assign_cyclenumber(maven)
animal_metabolism <- extract_metabolism(maven.cycle)
metablism_trend(animal_metabolism, maven_experiment = "maven.example1")
p <- metablism_trend(animal_metabolism, maven_experiment = "maven.example1")
p + scale_color_brewer(palette = "Dark2") + theme_bw()
library(ggplot2)
p + scale_color_brewer(palette = "Dark2") + theme_bw()
#'
#' @importFrom magrittr %>%
#' @importFrom dplyr mutate
#' @importFrom ggplot2 ggplot aes geom_line facet_wrap labs scale_color_viridis_d theme ggsave
#'
#' @return
#' @export
#'
#' @examples #metablism_trend(animal_metabolism, outdir = "output",
#' #out_filename = "", out_filetype = ".png")
metabolism_trend <- function(animal_metabolism, maven_experiment = "",
outdir = "output", out_filename = "MetabolismTrends",
out_filetype = ".png") {
p <- ggplot(data = animal_metabolism %>%
mutate(result = co2_convertion(result)),
aes(x = measurement_number, y = result, col = cycle)) +
geom_line(size = 2) +
facet_wrap(~ Chamber, scales = "free_y") +
labs(title = "Animal Metabolism Trends",
x = "Measurement Time",
y = expression(CO[2] ~ (mu * L ~ h^-1)),
caption = maven_experiment) +
scale_color_viridis_d(option = "D", begin = 0.2, end = 0.8) +
theme(legend.position = "bottom",
plot.title.position = "plot",
plot.caption.position =  "plot")
outpath <- file.path(outdir,
out_filename = paste0(Sys.Date(),"_",maven_experiment, "_",
out_filename, out_filetype))
ggsave(p, filename = outpath, dpi = 300, scale = 1.5,
width = 7, height = 4)
return(p)
}
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::document()
devtools::load_all()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
devtools::build()
devtools::check()
R.version
R.Version()
R.version.string
devtools::check()
devtools::install()
devtools::build()
devtools::build()
?install.packages
devtools::build()
devtools::build()
!is.NULL
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::build_vignettes()
library(MAVEn)
devtools::load_all("C:/Users/Megan/github_DAPPER/MAVEn")
library(MAVEn)
devtools::load_all("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::document()
devtools::document()
devtools::install()
devtools::build()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
library(MAVEn)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::build()
devtools::check()
library(MAVEn)
devtools::document()
library(MAVEn)
devtools::document()
library(MAVEn)
devtools::install()
devtools::install()
update.packages("Rcpp")
update.packages("glue")
update.packages("backports")
devtools::install()
install.packages(c("arules", "backports", "bipartite", "cartography", "classInt", "ecodist", "factoextra", "FRK", "fs", "gamboostLSS", "gdtools", "geojsonio", "glue", "gstat", "h2o", "httpcode", "intervals", "janitor", "lctools", "leafem", "lemon", "lme4", "lubridate", "mapdeck", "mapview", "mritc", "multcomp", "MXM", "openair", "optimx", "padr", "plotly", "quantreg", "Rcpp", "reshape2", "reticulate", "retistruct", "rminer", "seacarb", "secr", "sensitivity", "sf", "sfsmisc", "sn", "spData", "spsurvey", "stars", "stplanr", "survey", "survival", "taxize", "TeachingDemos", "tidycensus", "tigris", "tmap", "usethis", "vcd", "xml2"))
install.packages(c("arules", "backports", "bipartite", "cartography", "classInt", "ecodist", "factoextra", "FRK", "fs", "gamboostLSS", "gdtools", "geojsonio", "glue", "gstat", "h2o", "httpcode", "intervals", "janitor", "lctools", "leafem", "lemon", "lme4", "lubridate", "mapdeck", "mapview", "mritc", "multcomp", "MXM", "openair", "optimx", "padr", "plotly", "quantreg", "Rcpp", "reshape2", "reticulate", "retistruct", "rminer", "seacarb", "secr", "sensitivity", "sf", "sfsmisc", "sn", "spData", "spsurvey", "stars", "stplanr", "survey", "survival", "taxize", "TeachingDemos", "tidycensus", "tigris", "tmap", "usethis", "vcd", "xml2"))
install.packages(c("arules", "backports", "bipartite", "cartography", "classInt", "ecodist", "factoextra", "FRK", "fs", "gamboostLSS", "gdtools", "geojsonio", "glue", "gstat", "h2o", "httpcode", "intervals", "janitor", "lctools", "leafem", "lemon", "lme4", "lubridate", "mapdeck", "mapview", "mritc", "multcomp", "MXM", "openair", "optimx", "padr", "plotly", "quantreg", "Rcpp", "reshape2", "reticulate", "retistruct", "rminer", "seacarb", "secr", "sensitivity", "sf", "sfsmisc", "sn", "spData", "spsurvey", "stars", "stplanr", "survey", "survival", "taxize", "TeachingDemos", "tidycensus", "tigris", "tmap", "usethis", "vcd", "xml2"))
install.packages(c("arules", "backports", "bipartite", "cartography", "classInt", "ecodist", "factoextra", "FRK", "fs", "gamboostLSS", "gdtools", "geojsonio", "glue", "gstat", "h2o", "httpcode", "intervals", "janitor", "lctools", "leafem", "lemon", "lme4", "lubridate", "mapdeck", "mapview", "mritc", "multcomp", "MXM", "openair", "optimx", "padr", "plotly", "quantreg", "Rcpp", "reshape2", "reticulate", "retistruct", "rminer", "seacarb", "secr", "sensitivity", "sf", "sfsmisc", "sn", "spData", "spsurvey", "stars", "stplanr", "survey", "survival", "taxize", "TeachingDemos", "tidycensus", "tigris", "tmap", "usethis", "vcd", "xml2"))
devtools::install()
devtools::install()
install.packages("Rcpp")
devtools::install()
install.packages("glue","backports")
install.packages("backports")
devtools::install()
devtools::install()
install.packages("Rcpp")
devtools::install()
library(MAVEn)
devtools::build()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::check()
devtools::install()
devtools::build()
devtools::check()
devtools::document()
usethis::use_data(maven_output)
usethis::use_data(maven_output, overwrite = T)
usethis::use_data(maven_output.csv, overwrite = T)
usethis::use_data("./data/maven_output.csv", overwrite = T)
usethis::use_data(maven_output)
usethis::use_data(maven_output.csv)
usethis::use_data(./data/maven_output)
usethis::use_data("./data/maven_output")
usethis::use_data(maven_output)
?usethis::use_data
?dput()
devtools::document()
devtools::document()
library(MAVEn)
maven <- read_maven(baseline == T)
load_all()
devtools::load_all()
library(MAVEn)
read_maven(baseline = T)
maven <- read_maven(baseline = T)
usethis::use_data(maven)
maven_output <- read_maven(baseline = T)
usethis::use_data(maven_output)
devtools::document()
tools::checkRdaFiles()
tools::checkRdaFiles("./data/")
usethis::use_data(maven_output, compress = "bzip2")
usethis::use_data(maven_output, compress = "bzip2", overwrite = T)
tools::checkRdaFiles("./data/")
?usethis::use_data()
devtools::document()
devtools::install()
devtools::install()
devtools::build()
devtools::check()
library(MAVEn)
library(MAVEn)
maven_raw <- read_maven(datadir = "../inst/extdata",
maven_datafile = "./maven_output.csv", baseline = T)
getwd()
setwd("./vignettes/")
getwd()
maven_raw <- read_maven(datadir = "../inst/extdata",
maven_datafile = "./maven_output.csv", baseline = T)
maven_raw
devtools::document()
devtools::install()
devtools::build()
devtools::check()
devtools::check()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("PATH")
devtools::check()
library(MAVEn)
devtools::check()
options(repos = c(CRAN = "http://cran.rstudio.com"))
depend <- c("ggplot2", "pander", "tidyr")
ndepend <- length(depend)
present <- installed.packages()[, "Package"]
needed <- depend[!(depend %in% present)]
n_needed <- length(needed)
if (n_needed > 0) {
install.packages(needed)
}
library(ggplot2); library(pander); library(tidyr)
package_version()
sessionInfo()
maven_raw <- read_maven(datadir = "../inst/extdata",
maven_datafile = "./maven_output.csv", baseline = T)
getwd()
maven_raw <- read_maven(datadir = "./inst/extdata",
maven_datafile = "./maven_output.csv", baseline = T)
tibble(maven_raw)
plot_maven_overview(maven_raw, maven_experiment = "maven.example1")
maven <- read_maven(datadir = "../inst/extdata",
maven_datafile = "./maven_output.csv", baseline = F)
maven <- read_maven(datadir = "./inst/extdata",
maven_datafile = "./maven_output.csv", baseline = F)
tibble(maven)
maven.cycle <- assign_cyclenumber(maven)
tibble(maven.cycle)
animal_metabolism <- extract_metabolism(maven.cycle)
tibble(animal_metabolism)
metabolism_trend(animal_metabolism, maven_experiment = "maven.example1")
p <- metabolism_trend(animal_metabolism, maven_experiment = "maven.example1")
p + scale_color_brewer(palette = "Dark2")
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
pander(head(metabolism_summary_cycle), table.split.table = Inf)
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
pander(head(metabolism_summary_chamber), table.split.table = Inf)
getwd()
setwd("../maven_test")
maven <- read_maven(datadir = "../maven_test/",
maven_datafile = "./maven_output.csv", baseline = F)
library(MAVEn)
maven <- read_maven(datadir = "../maven_test/",
maven_datafile = "./maven_output.csv", baseline = F)
maven.cycle <- assign_cyclenumber(maven)
animal_metabolism <- extract_metabolism(maven.cycle)
metabolism_trend(animal_metabolism, maven_experiment = "maven.example1",
outdir = "./output")
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = "maven.example1", outdir = "./test1")
animal_activity <- extract_activity(maven.cycle, metabolism_summary_cycle,
interval = 60, activity_baseline = 0.01)
activity_trend(animal_activity, maven_experiment = "maven.example1",
outdir = "./test2")
# Step 7: Generate animal activity summary tables ----
#
# There is currently no calculation for the abs difference sum, but that can be
# added into the pipeline.
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
activity_summary_chamber <- summarize_activity(animal_activity,
type = "by_chamber")
## Complete analysis workflow ----
evaluate_maven(maven_datafile = "maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1,
outdir = "./test4")
devtools::install("../MAVEn/")
library(MAVEn)
## Complete analysis workflow ----
evaluate_maven(maven_datafile = "maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1,
outdir = "./test4")
getwd()
## Complete analysis workflow ----
evaluate_maven(datadir = "maven_test",
maven_datafile = "./maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1,
outdir = "./test4")
## Complete analysis workflow ----
evaluate_maven(maven_datafile = "./maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1,
outdir = "./test4")
read_maven(maven_datafile = "maven_output.csv")
read_maven(datadir = "./maven_test", maven_datafile = "maven_output.csv")
read_maven(datadir = "maven_test", maven_datafile = "maven_output.csv")
getwd()
maven_raw <- read_maven(datadir = "./maven_test/",
maven_datafile = "./maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "../maven_test/",
maven_datafile = "./maven_output.csv", baseline = T)
devtools::install("../MAVEn/")
library(MAVEn)
maven_raw <- read_maven(maven_datafile = "./maven_output.csv", baseline = T)
getwd()
maven_raw <- read_maven(datadir = "maven_test/",
maven_datafile = "./maven_output.csv", baseline = T)
getwd()
maven_raw <- read_maven(datadir = "",
maven_datafile = "./maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "",
maven_datafile = "maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "",
maven_datafile = "./maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "maven_test/",
maven_datafile = "maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "maven_test",
maven_datafile = "maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "./maven_test",
maven_datafile = "maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "../maven_test",
maven_datafile = "maven_output.csv", baseline = T)
plot_maven_overview(maven_raw, maven_experiment = "maven.example1")
maven <- read_maven(datadir = "../maven_test/",
maven_datafile = "./maven_output.csv", baseline = F)
## Complete analysis workflow ----
evaluate_maven(datadir = "../maven_test/",
maven_datafile = "maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1,
outdir = "./test4")
devtools::install("../MAVEn/")
library(MAVEn)
## Complete analysis workflow ----
evaluate_maven(datadir = "../maven_test/",
maven_datafile = "maven_output.csv",
maven_experiment = "test.evaluate",
activity_baseline = 0.01, activity_threshold = 1,
outdir = "./test4")
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::check()
