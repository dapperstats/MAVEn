rlang::last_error()
code <- sapply(list.files(file.path(".", "R"), full.names = TRUE), source)
# load the raw MAVEn dataset with baseline information
# This is useful for plotting the overall experimental summary
maven_raw <- read_maven(maven_datafile = "./maven_output.csv", baseline = T)
# load the modified MAVEn dataset without baseline for workflow processing
### Do we need the baseline data for analysis? ###
maven <- read_maven(maven_datafile = "./maven_output.csv", baseline = F)
# assign a cycle number to the dataset
### update function name when other questions are answered ###
maven.cycle <- assign_cyclenumber_at1_variable(maven)
# Extract the metabolism data
fly_metabolism <- extract_metabolism(maven.cycle)
# visualize the trend
metablism_trend(fly_metabolism, outdir = "output",
out_filename = "maven_test", out_filetype = ".png")
# generate summary table by cycle
metabolism_summary_cycle <- summarize_metabolism(fly_metabolism, type = "by_cycle")
metabolism_summary_cycle
# extract activity data
fly_activity<- extract_activity(maven, metabolism_summary_cycle,
interval= 60, threshold = 0.01)
# Creates a dataframe for the fly activity
extract_activity <- function(maven.cycle,
metabolism_summary_cycle, interval = "", threshold = "") {
met <- metabolism_summary_cycle %>%
mutate(act_start = median_time - interval,
act_end = median_time + interval)
act <- maven.cycle %>%
select(Seconds:BP_kPa, cycle, c_FRC_mlmin:CO2_mlmin, Act_1:Act_16) %>%
pivot_longer(cols = Act_1:Act_16, names_to = "parameter",
values_to = "result") %>%
left_join(met, by = c("Chamber", "cycle")) %>%
group_by(Chamber, cycle) %>%
filter(Seconds > median_time - interval &
Seconds < median_time + interval) %>%
group_by(Chamber, cycle) %>%
mutate(measurement_number = Seconds - min(Seconds) + 1) %>%
filter(result >= threshold)
return(act)
}
# extract activity data
fly_activity<- extract_activity(maven.cycle, metabolism_summary_cycle,
interval= 60, threshold = 0.01)
ggplot(fly_activity, aes(measurement_number, result, col = cycle)) +
geom_point() + facet_wrap(~Chamber)
activity_summary_cycle <- summarize_activity(fly_activity, type = "by_cycle")
activity_summary_chamber <- summarize_activity(fly_activity, type = "by_chamber")
summarize_activity <- function(fly_activity, type = "",
activity_threshold = "0.5") {
n_cycles <- max(fly_activity$cycle)
act_summary <- fly_activity %>%
group_by(Chamber, cycle) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
if (type == "by_chamber") {
act_summary <- act_summary %>%
group_by(Chamber) %>%
summarize(mean = mean(mean_activity, na.rm = T),
sd = sd(mean_activity, na.rm = T),
n = n_cycles,
sem = sem(mean_activity, n),
lower.ci = lower.ci(mean_activity, n),
upper.ci = upper.ci(mean_activity, n))
}
return(act_summary)
}
activity_summary_chamber <- summarize_activity(fly_activity, type = "by_chamber")
max(fly_activity$cycle)
n_cycles <- as.numeric(max(fly_activity$cycle))
n_cycles
summarize_activity <- function(fly_activity, type = "",
activity_threshold = "0.5") {
n_cycles <- as.numeric(max(fly_activity$cycle))
act_summary <- fly_activity %>%
group_by(Chamber, cycle) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
if (type == "by_chamber") {
act_summary <- act_summary %>%
group_by(Chamber) %>%
summarize(mean = mean(mean_activity, na.rm = T),
sd = sd(mean_activity, na.rm = T),
n = n_cycles,
sem = sem(mean_activity, n),
lower.ci = lower.ci(mean_activity, n),
upper.ci = upper.ci(mean_activity, n))
}
return(act_summary)
}
## need to add in n_cycles
summarize_metabolism <- function(fly_metabolism, type = "") {
n_cycles <- as.numeric(max(fly_metabolism$cycle))
met_summary <- fly_metabolism %>%
group_by(Chamber, cycle) %>%
summarize(median_co2_ul.h = co2_convertion_median(result),
median_time = median(Seconds), median_temp = median(TempC))
if (type == "by_chamber") {
met_summary <- met_summary %>%
group_by(Chamber) %>%
summarize(mean = mean(median_co2_ul.h),
sd = sd(median_co2_ul.h),
n = n_cycles,
sem = sem(median_co2_ul.h, n),
lower.ci = lower.ci(median_co2_ul.h, n),
upper.ci = upper.ci(median_co2_ul.h, n))
}
return(met_summary)
}
activity_summary_chamber <- summarize_activity(fly_activity, type = "by_chamber")
activity_summary_chamber
#' @param fly_metabolism Fly activity dataframe extracted from the MAVEn without baseline using \code{extract_activity}.
#' @param outdir Folder where figure should be stored.
#' @param out_filename Figure name.
#' @param out_filetype Figure file type.
#'
#' @return
#' @export
#'
#' @examples activity_trend(fly_activity outdir = "output",
#' out_filename = "", out_filetype = ".png")
activity_trend <- function(fly_activity,
outdir = "output", out_filename = "ActivityTrends", out_filetype = ".png") {
p <- ggplot(data = fly_activity,
aes(x = measurement_number, y = result, col = cycle)) +
geom_point() +
facet_wrap(~ Chamber, scales = "free_y") +
labs(title = "Fly Activity Trends",
x = "Measurement Time",
y = expression(CO[2] ~ (mu * L ~ h^-1))) +
scale_color_viridis_d(option = "D", begin = 0.2, end = 0.8) +
theme(legend.position = "bottom")
outpath <- file.path(outdir,
out_filename = paste0(Sys.Date(),"_", out_filename, out_filetype))
ggsave(p, filename = outpath, dpi = 300, scale = 1.5,
width = 7, height = 4)
return(p)
}
activity_trend(fly_activity, outdir, out_filename, out_filetype)
activity_trend(fly_activity)
head(fly_activity)
act_summary <- fly_activity %>%
group_by(Chamber, cycle) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
activity_threshold = 0.01
act_summary <- fly_activity %>%
group_by(Chamber, cycle) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
act_summary
act_summary <- fly_activity %>%
group_by(Chamber, cycle, median_time) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
act_summary
summarize_activity <- function(fly_activity, type = "",
activity_threshold = "0.5") {
n_cycles <- as.numeric(max(fly_activity$cycle))
act_summary <- fly_activity %>%
group_by(Chamber, cycle, median_time) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
if (type == "by_chamber") {
act_summary <- act_summary %>%
group_by(Chamber) %>%
summarize(mean = mean(mean_activity, na.rm = T),
sd = sd(mean_activity, na.rm = T),
n = n_cycles,
sem = sem(mean_activity, n),
lower.ci = lower.ci(mean_activity, n),
upper.ci = upper.ci(mean_activity, n))
}
return(act_summary)
}
head(act_summary)
#' @param fly_metabolism Fly activity dataframe extracted from the MAVEn without baseline using \code{extract_activity}.
#' @param outdir Folder where figure should be stored.
#' @param out_filename Figure name.
#' @param out_filetype Figure file type.
#'
#' @return
#' @export
#'
#' @examples activity_trend(fly_activity outdir = "output",
#' out_filename = "", out_filetype = ".png")
activity_trend <- function(fly_activity,
outdir = "output", out_filename = "ActivityTrends", out_filetype = ".png") {
p <- ggplot(data = fly_activity,
aes(x = measurement_number, y = result, col = cycle)) +
geom_point() +
facet_wrap(~ Chamber, scales = "free_y") +
geom_hline(aes(xintercept = median_time), col = "red", linetype = "dashed") +
labs(title = "Fly Activity Trends",
x = "Measurement Number",
y = expression(CO[2] ~ (mu * L ~ h^-1))) +
scale_color_viridis_d(option = "D", begin = 0.2, end = 0.8) +
theme(legend.position = "bottom")
outpath <- file.path(outdir,
out_filename = paste0(Sys.Date(),"_", out_filename, out_filetype))
ggsave(p, filename = outpath, dpi = 300, scale = 1.5,
width = 7, height = 4)
return(p)
}
activity_trend(fly_activity)
# extract activity data
fly_activity <- extract_activity(maven.cycle, metabolism_summary_cycle,
interval= 60, threshold = 0.01)
activity_trend(fly_activity)
#' @param fly_metabolism Fly activity dataframe extracted from the MAVEn without baseline using \code{extract_activity}.
#' @param outdir Folder where figure should be stored.
#' @param out_filename Figure name.
#' @param out_filetype Figure file type.
#'
#' @return
#' @export
#'
#' @examples activity_trend(fly_activity outdir = "output",
#' out_filename = "", out_filetype = ".png")
activity_trend <- function(fly_activity,
outdir = "output", out_filename = "ActivityTrends", out_filetype = ".png") {
p <- ggplot(data = fly_activity,
aes(x = measurement_number, y = result, col = cycle)) +
geom_point() +
facet_wrap(~ Chamber, scales = "free_y") +
geom_vline(aes(xintercept = median_time), col = "red", linetype = "dashed") +
labs(title = "Fly Activity Trends",
x = "Measurement Number",
y = expression(CO[2] ~ (mu * L ~ h^-1))) +
scale_color_viridis_d(option = "D", begin = 0.2, end = 0.8) +
theme(legend.position = "bottom")
outpath <- file.path(outdir,
out_filename = paste0(Sys.Date(),"_", out_filename, out_filetype))
ggsave(p, filename = outpath, dpi = 300, scale = 1.5,
width = 7, height = 4)
return(p)
}
activity_trend(fly_activity)
head(fly_activity)
# Creates a dataframe for the fly activity
extract_activity <- function(maven.cycle,
metabolism_summary_cycle, interval = "", threshold = "") {
met <- metabolism_summary_cycle %>%
mutate(act_start = median_time - interval,
act_end = median_time + interval)
act <- maven.cycle %>%
select(Seconds:BP_kPa, cycle, c_FRC_mlmin:CO2_mlmin, Act_1:Act_16) %>%
pivot_longer(cols = Act_1:Act_16, names_to = "parameter",
values_to = "result") %>%
left_join(met, by = c("Chamber", "cycle")) %>%
group_by(Chamber, cycle) %>%
filter(Seconds > median_time - interval &
Seconds < median_time + interval) %>%
group_by(Chamber, cycle) %>%
mutate(measurement_number = Seconds - min(Seconds) + 1,
measurement_number_time = median_time - min(Seconds)) %>%
filter(result >= threshold)
return(act)
}
# extract activity data
fly_activity <- extract_activity(maven.cycle, metabolism_summary_cycle,
interval= 60, threshold = 0.01)
summarize_activity <- function(fly_activity, type = "",
activity_threshold = "0.5") {
n_cycles <- as.numeric(max(fly_activity$cycle))
act_summary <- fly_activity %>%
group_by(Chamber, cycle, measurement_number_time) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
if (type == "by_chamber") {
act_summary <- act_summary %>%
group_by(Chamber) %>%
summarize(mean = mean(mean_activity, na.rm = T),
sd = sd(mean_activity, na.rm = T),
n = n_cycles,
sem = sem(mean_activity, n),
lower.ci = lower.ci(mean_activity, n),
upper.ci = upper.ci(mean_activity, n))
}
return(act_summary)
}
#' @param fly_metabolism Fly activity dataframe extracted from the MAVEn without baseline using \code{extract_activity}.
#' @param outdir Folder where figure should be stored.
#' @param out_filename Figure name.
#' @param out_filetype Figure file type.
#'
#' @return
#' @export
#'
#' @examples activity_trend(fly_activity outdir = "output",
#' out_filename = "", out_filetype = ".png")
activity_trend <- function(fly_activity,
outdir = "output", out_filename = "ActivityTrends", out_filetype = ".png") {
p <- ggplot(data = fly_activity,
aes(x = measurement_number, y = result, col = cycle)) +
geom_point() +
facet_wrap(~ Chamber, scales = "free_y") +
geom_vline(aes(xintercept = measurement_number_time),
col = "red", linetype = "dashed") +
labs(title = "Fly Activity Trends",
x = "Measurement Number",
y = expression(CO[2] ~ (mu * L ~ h^-1))) +
scale_color_viridis_d(option = "D", begin = 0.2, end = 0.8) +
theme(legend.position = "bottom")
outpath <- file.path(outdir,
out_filename = paste0(Sys.Date(),"_", out_filename, out_filetype))
ggsave(p, filename = outpath, dpi = 300, scale = 1.5,
width = 7, height = 4)
return(p)
}
activity_trend(fly_activity)
summarize_activity <- function(fly_activity, type = "",
activity_threshold = "0.5") {
n_cycles <- as.numeric(max(fly_activity$cycle))
act_summary <- fly_activity %>%
group_by(Chamber, cycle) %>%
summarize(mean_activity = mean(result, na.rm = T),
median_activity = median(result, na.rm = T)) %>%
mutate(activity_state = ifelse(mean_activity >=
activity_threshold, "Active", "Inactive"))
if (type == "by_chamber") {
act_summary <- act_summary %>%
group_by(Chamber) %>%
summarize(mean = mean(mean_activity, na.rm = T),
sd = sd(mean_activity, na.rm = T),
n = n_cycles,
sem = sem(mean_activity, n),
lower.ci = lower.ci(mean_activity, n),
upper.ci = upper.ci(mean_activity, n))
}
return(act_summary)
}
activity_summary_cycle <- summarize_activity(fly_activity, type = "by_cycle")
activity_summary_chamber <- summarize_activity(fly_activity, type = "by_chamber")
maven_datatable(metabolism_summary_cycle, activity_summary_cycle) %>%
mutate(mean_activity = replace_na(mean_activity,0),
activity_state = ifelse(mean_activity >= activity_threshold, "Active", "Inactive"))
# create data table for analysis purposes
test.out <- maven_datatable(metabolism_summary_cycle, activity_summary_cycle) %>%
mutate(mean_activity = replace_na(mean_activity,0),
activity_state = ifelse(mean_activity >= activity_threshold, "Active", "Inactive"))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() + geom_point(position = position_jitter(width = .2))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() + geom_point(position = position_jitter(width = .2)) +
labs(title = "Activity State", x = "", y = expression(Median~CO[2]~(mu*L~h^-1~)))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() + geom_point(position = position_jitter(width = .2)) +
labs(title = "Activity State", x = "", y = expression(Median~CO[2]~(mu*L~h^-1~))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() + geom_point(position = position_jitter(width = .2)) +
labs(title = "Activity State", x = "", y = expression(Median~CO[2]~(mu*L~h^-1~)))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() + geom_point(position = position_jitter(width = .2)) +
labs(title = "Activity State", x = "", y = expression(Median~CO[2]~(*mu*L~h^-1*)))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() + geom_point(position = position_jitter(width = .2)) +
labs(title = "Activity State", x = "", y = expression(Median~CO[2]~(mu*L~h^-1)))
maven <- read_maven(datadir = "data",
maven_datafile = "./MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = F)
# assign a cycle number to the dataset
### update function name when other questions are answered ###
maven.cycle <- assign_cyclenumber_at1_variable(maven)
# Extract the metabolism data
fly_metabolism <- extract_metabolism(maven.cycle)
# visualize the trend
metablism_trend(fly_metabolism, outdir = "output",
out_filename = "maven_test", out_filetype = ".png")
# generate summary table by cycle
metabolism_summary_cycle <- summarize_metabolism(fly_metabolism, type = "by_cycle")
maven <- read_maven(datadir = "data",
maven_datafile = "./MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = F)
# assign a cycle number to the dataset
### update function name when other questions are answered ###
maven.cycle <- assign_cyclenumber_at1_variable(maven)
# Extract the metabolism data
fly_metabolism <- extract_metabolism(maven.cycle)
# Extract the metabolism data
fly_metabolism <- extract_metabolism(maven.cycle)
# visualize the trend
metablism_trend(fly_metabolism, outdir = "output",
out_filename = "maven_test", out_filetype = ".png")
ggplot(data = fly_metabolism %>%
mutate(result = co2_convertion(result)),
aes(x = measurement_number, y = result, col = cycle)) +
geom_point()
code <- sapply(list.files(file.path(".", "R"), full.names = TRUE), source)
maven <- read_maven(datadir = "data",
maven_datafile = "./MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = F)
### The TC1 values from this file do not appear to be the same as those in the other. ###
maven_raw2 <- read_maven(maven_datafile = "./MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = T)
### The TC1 values from this file do not appear to be the same as those in the other. ###
maven_raw <- read_maven(maven_datafile = "./MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = T)
plot_maven_overview(maven_raw)
maven <- read_maven(datadir = "data",
maven_datafile = "./MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = F)
# assign a cycle number to the dataset
### update function name when other questions are answered ###
maven.cycle <- assign_cyclenumber_at1_variable(maven)
# assign a cycle number to the dataset
### update function name when other questions are answered ###
maven.cycle <- assign_cyclenumber_at1_variable(maven)
# Extract the metabolism data
fly_metabolism <- extract_metabolism(maven.cycle)
# visualize the trend
metablism_trend(fly_metabolism, outdir = "output",
out_filename = "maven_test", out_filetype = ".png")
df <-  maven %>% arrange(Seconds)
diff.list <- c()
for (i in 2:length(df$Chamber)) {
diff <- df$Chamber[i - 1] - df$Chamber[i]
diff.list <- append(diff.list, diff)
}
time.list <- unique(c(df[df$Chamber == 1, "Seconds"][1],
df[which(diff.list > 1) + 1, "Seconds"],
df[nrow(df), "Seconds"]))
time.list
cycle_duration <- n_chambers * chamber_measure_duration
n_chambers = 16
chamber_measure_duration = 120
cycle_duration <- n_chambers * chamber_measure_duration
n_cycles = (nrow(df) - df$Seconds[time.list[1]]) / (cycle_duration)
n_cycles
ceiling(n_cycles)
for (i in 1:ceiling(n_cycles)) {
df[df$Seconds >= time.list[i] &
df$Seconds <= time.list[i + 1], "cycle"] <- i
}
# Function name will need to change; this function currently operates to detect
# the first time Chamber 1 is read in the dataseries and allows for a variable
# number of measurements per chamber. Waiting on James to confirm that this is
# how he wants to proceed.
# assign_cyclenumber
assign_cyclenumber_at1_variable <- function(maven,
n_chambers = 16,
chamber_measure_duration = 120) {
df <-  maven %>% arrange(Seconds)
diff.list <- c()
# Detect the difference between a row and use it as an indicator for
#   the start of the next cycle
for (i in 2:length(df$Chamber)) {
diff <- df$Chamber[i - 1] - df$Chamber[i]
diff.list <- append(diff.list, diff)
}
# In some cases, the first value may not be detected because of where
#   the instrument starts its reading.
time.list <- unique(c(df[df$Chamber == 1, "Seconds"][1],
df[which(diff.list > 1) + 1, "Seconds"],
df[nrow(df), "Seconds"]))
cycle_duration <- n_chambers * chamber_measure_duration
n_cycles = (nrow(df) - df$Seconds[time.list[1]]) / (cycle_duration)
message(paste("There were", n_cycles, "cycles detected in this dataset."))
df$cycle <- "NA"
# if((ceiling(n_cycles) - 1) > 1) {
#     for (i in 1:ceiling(n_cycles) - 1) {
#         df[df$Seconds >= time.list[i] &
#                 df$Seconds <= time.list[i + 1], "cycle"] <- i
#     }
#
# } else {
for (i in 1:ceiling(n_cycles)) {
df[df$Seconds >= time.list[i] &
df$Seconds <= time.list[i + 1], "cycle"] <- i
}
#}
return(df)
}
# assign a cycle number to the dataset
### update function name when other questions are answered ###
maven.cycle <- assign_cyclenumber_at1_variable(maven)
# Extract the metabolism data
fly_metabolism <- extract_metabolism(maven.cycle)
# visualize the trend
metablism_trend(fly_metabolism, outdir = "output",
out_filename = "maven_test", out_filetype = ".png")
# generate summary table by cycle
metabolism_summary_cycle <- summarize_metabolism(fly_metabolism, type = "by_cycle")
# Metabolism diagnostic
metabolism_diag(maven_raw, metabolism_summary_cycle)
# extract activity data
fly_activity <- extract_activity(maven.cycle, metabolism_summary_cycle,
interval= 60, threshold = 0.01)
activity_trend(fly_activity)
activity_summary_cycle <- summarize_activity(fly_activity, type = "by_cycle")
activity_summary_chamber <- summarize_activity(fly_activity, type = "by_chamber")
# create data table for analysis purposes
test.out <- maven_datatable(metabolism_summary_cycle, activity_summary_cycle) %>%
mutate(mean_activity = replace_na(mean_activity,0),
activity_state = ifelse(mean_activity >= activity_threshold, "Active", "Inactive"))
# create data table for analysis purposes
activity_threshold <- 0.01
test.out <- maven_datatable(metabolism_summary_cycle, activity_summary_cycle) %>%
mutate(mean_activity = replace_na(mean_activity,0),
activity_state = ifelse(mean_activity >= activity_threshold, "Active", "Inactive"))
ggplot(test.out, aes(x = activity_state, y = median_co2_ul.h)) +
geom_boxplot() +
geom_point(position = position_jitter(width = .2)) +
labs(title = "Activity State", x = "", y = expression(Median~CO[2]~(mu*L~h^-1)))
