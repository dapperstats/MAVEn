# There is currently no calculation for the abs difference sum, but that can be
# added into the pipeline.
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
library(tidyverse)
# Step 7: Generate animal activity summary tables ----
#
# There is currently no calculation for the abs difference sum, but that can be
# added into the pipeline.
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
activity_summary_chamber <- summarize_activity(animal_activity,
type = "by_chamber")
activity_summary_cycle
# Step 8: Visual diagnostic of animal activity ----
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle)
devtools
devtools::load_all("../MAVEn/")
# Step 8: Visual diagnostic of animal activity ----
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle)
devtools::document("../MAVEn/")
devtools::install("../MAVEn/")
devtools::build("../MAVEn/")
devtools::check("../MAVEn/")
devtools::check("../MAVEn/")
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
devtools::build("../MAVEn/")
devtools::install("../MAVEn/")
setwd("../MAVEn/")
devtools::build_vignettes("../MAVEn/")
devtools::build_vignettes("MAVEn")
setwd("C:/Users/Megan/github_DAPPER/MAVEn/doc")
setwd("C:/Users/Megan/github_DAPPER/MAVEn/")
devtools::build_vignettes("MAVEn")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::install()
devtools::document()
devtools::build_vignettes()
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
library(MAVEn)
options(repos = c(CRAN = "http://cran.rstudio.com"))
depend <- c("ggplot2", "pander", "tidyr")
ndepend <- length(depend)
present <- installed.packages()[, "Package"]
needed <- depend[!(depend %in% present)]
n_needed <- length(needed)
if (n_needed > 0) {
install.packages(needed)
}
for (i in 1:ndepend) {
suppressMessages(eval(bquote(library(.(depend[i])))))
}
maven_raw <- read_maven(datadir = "../data",
maven_datafile = "./maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "../inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = T)
maven_raw <- read_maven(datadir = "./inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = T)
tibble(maven_raw)
maven <- read_maven(datadir = "./inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = F)
tibble(maven)
maven_cycle <- assign_cyclenumber(maven)
tibble(maven_cycle)
animal_metabolism <- extract_metabolism(maven_cycle)
tibble(animal_metabolism)
metabolism_trend(animal_metabolism)
p <- metabolism_trend(animal_metabolism)
p + scale_color_brewer(palette = "Dark2")
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
pander(head(metabolism_summary_cycle), table.split.table = Inf)
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
pander(head(metabolism_summary_chamber), table.split.table = Inf)
metabolism_diag(maven_raw, metabolism_summary_cycle)
animal_activity <- extract_activity(maven_cycle, metabolism_summary_cycle)
tibble(animal_activity)
activity_trend(animal_activity)
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
pander(head(activity_summary_cycle), table.split.table = Inf)
activity_summary_chamber <- summarize_activity(animal_activity,
type = "by_chamber")
pander(head(activity_summary_chamber), table.split.table = Inf)
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle,
maven_experiment = "maven.example1", interval = 60)
devtools::load_all()
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
pander(head(activity_summary_cycle), table.split.table = Inf)
activity_summary_chamber <- summarize_activity(animal_activity,
type = "by_chamber")
pander(head(activity_summary_chamber), table.split.table = Inf)
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle)
?strsplit
maven_datafile = "maven_output.csv"
strsplit(pattern = ".csv", maven_datafile)
strsplit(split = ".csv", maven_datafile)
strsplit(split = ".csv", maven_datafile)[1]
strsplit(split = ".csv", maven_datafile)[[1]]
devtools::load_all()
setwd("../maven_test/")
library(MAVEn)
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "maven_output.csv",
activity_baseline = 0.0, activity_threshold = 0.75,
outdir = "./20200518_complete_analysis")
devtools::load_all("../MAVEn/")
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "maven_output.csv",
activity_baseline = 0.0, activity_threshold = 0.75,
outdir = "./20200518_complete_analysis")
devtools::load_all("../MAVEn/")
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "maven_output.csv",
activity_baseline = 0.0, activity_threshold = 0.75,
outdir = "./20200518_complete_analysis")
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "maven_output.csv",
activity_baseline = 0.01, activity_threshold = 0.75,
outdir = "./20200518_complete_analysis")
Sys.Date()
devtools::load_all(",")
devtools::load_all("../MAVEn/")
Sys.time()
paste0(Sys.time())
paste0(format(Sys.time(), "%Y%m%d-%h%m"))
paste0(format(Sys.time(), "%Y%m%d-%h%mm"))
paste0(format(Sys.time(), "%Y%m%d-%H%M"))
paste(format(Sys.time(), "%Y%m%d-%H%M"))
devtools::load_all("../MAVEn/")
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "maven_output.csv",
activity_baseline = 0.01, activity_threshold = 0.75)
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv",
activity_baseline = 0.01, activity_threshold = 0.75)
maven_raw <- read_maven(datadir = "data",
maven_datafile = "MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = T)
plot_maven_overview(maven_raw)
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
maven_raw <- read_maven(datadir = "data",
maven_datafile = "MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = T)
plot_maven_overview(maven_raw)
maven <- read_maven(datadir = "data",
maven_datafile = "MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = F)
n_chambers = 16
chamber_measure_duration = 120
df <-  maven %>% arrange(Seconds)
diff.list <- c()
for (i in 2:length(df$Chamber)) {
diff <- df$Chamber[i - 1] - df$Chamber[i]
diff.list <- append(diff.list, diff)
}
diff
diff.list
time_list <- unique(c(df$Seconds[df$Chamber == 1][1],
df$Seconds[which(diff.list > 1) + 1],
df$Seconds[nrow(df)]))
time_list
8584/60
cycle_duration <- n_chambers * chamber_measure_duration
cycle_duration
n_cycles <- (nrow(df) - df$Seconds[time_list[1]]) / (cycle_duration)
n_cycles
n_cycles <- ceiling(n_cycles)
n_cycles
df$cycle <- "NA"
for (i in 1:n_cycles) {
df[df$Seconds >= time_list[i] &
df$Seconds <= time_list[i + 1], "cycle"] <- i
}
## detect if there is an incomplete cycle (i.e. instrument was shut off early)
start_lastcycle <- tail(time_list, n = 2)[1]
end_lastcycle <-  start_lastcycle + cycle_duration
start_lastcycle
end_lastcycle
df$Seconds[dim(df)[1]]
end_lastcycle
end_lastcycle + 30
df$Seconds[dim(df)[1]] <= (end_lastcycle + 30)
devtools::load_all("../MAVEn/")
maven_cycle <- assign_cyclenumber(maven)
animal_metabolism <- extract_metabolism(maven_cycle)
metabolism_trend(animal_metabolism)
cycle_window = 30
df <-  maven %>% arrange(Seconds)
diff.list <- c()
for (i in 2:length(df$Chamber)) {
diff <- df$Chamber[i - 1] - df$Chamber[i]
diff.list <- append(diff.list, diff)
}
time_list <- unique(c(df$Seconds[df$Chamber == 1][1],
df$Seconds[which(diff.list > 1) + 1],
df$Seconds[nrow(df)]))
cycle_duration <- n_chambers * chamber_measure_duration
n_cycles <- (nrow(df) - df$Seconds[time_list[1]]) / (cycle_duration)
n_cycles <- ceiling(n_cycles)
df$cycle <- "NA"
for (i in 1:n_cycles) {
df[df$Seconds >= time_list[i] &
df$Seconds <= time_list[i + 1], "cycle"] <- i
}
## detect if there is an incomplete cycle (i.e. instrument was shut off early)
start_lastcycle <- tail(time_list, n = 2)[1]
end_lastcycle <-  start_lastcycle + cycle_duration
end_lastcycle
if(df$Seconds[dim(df)[1]] <= (end_lastcycle + cycle_window)){
df <- df %>% mutate(cycle = ifelse(Seconds >= start_lastcycle, NA, cycle))
}
#message(paste("There were", max(df$cycle, na.rm = T), "complete cycles detected in this dataset."))
return(df)
unique(df$cycle)
df$Seconds >= start_lastcycle
View(df$Seconds >= start_lastcycle)
start_lastcycle
df$Seconds[dim(df)[1]]
end_lastcycle
tail(df$Seconds, 1)
time_list
8584
8584/60
df[df$Seconds == 8584,]
df[df$Seconds == 8588,]
devtools::load_all("../MAVEn/")
maven <- read_maven(datadir = "data",
maven_datafile = "MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv", baseline = F)
maven_cycle <- assign_cyclenumber(maven)
unique(maven_cycle$cycle)
animal_metabolism <- extract_metabolism(maven_cycle)
metabolism_trend(animal_metabolism)
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
metabolism_diag(maven_raw, metabolism_summary_cycle)
maven_raw <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = T)
plot_maven_overview(maven_raw)
maven <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = F)
maven_cycle <- assign_cyclenumber(maven)
animal_metabolism <- extract_metabolism(maven_cycle)
metabolism_trend(animal_metabolism)
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
metabolism_diag(maven_raw, metabolism_summary_cycle)
## Complete analysis workflow ----
evaluate_maven(datadir = "data",
maven_datafile = "MAVEn 129 2019-11-22_8WT-8mettl4b-eclOct23_males-R.csv",
activity_baseline = 0.01, activity_threshold = 0.75)
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::install()
devtools::document()
devtools::build_vignettes()
options(repos = c(CRAN = "http://cran.rstudio.com"))
depend <- c("ggplot2", "pander", "tidyr")
ndepend <- length(depend)
present <- installed.packages()[, "Package"]
needed <- depend[!(depend %in% present)]
n_needed <- length(needed)
if (n_needed > 0) {
install.packages(needed)
}
for (i in 1:ndepend) {
suppressMessages(eval(bquote(library(.(depend[i])))))
}
library(MAVEn)
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
maven_raw <- read_maven(datadir = "./inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = T)
tibble(maven_raw)
plot_maven_overview(maven_raw, maven_experiment = "maven.example1")
maven <- read_maven(datadir = "./inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = F)
tibble(maven)
maven_cycle <- assign_cyclenumber(maven)
tibble(maven_cycle)
animal_metabolism <- extract_metabolism(maven_cycle)
tibble(animal_metabolism)
metabolism_trend(animal_metabolism)
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
pander(head(metabolism_summary_cycle), table.split.table = Inf)
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
pander(head(metabolism_summary_chamber), table.split.table = Inf)
metabolism_diag(maven_raw, metabolism_summary_cycle)
animal_activity <- extract_activity(maven_cycle, metabolism_summary_cycle)
tibble(animal_activity)
setwd("C:/Users/Megan/github_DAPPER/MAVEn/doc")
maven_raw <- read_maven(datadir = "../inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = T)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all("../../MAVEn/")
devtools::build_vignettes("../../MAVEn/")
devtools::load_all("../../MAVEn/")
devtools::build_vignettes("../../MAVEn/")
devtools::install("../../MAVEn/")
devtools::build("../../MAVEn/")
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::install()
devtools::install()
devtools::install()
install.packages(c("backports", "ellipsis", "glue", "pillar", "pkgbuild", "ps", "scales", "tidyr", "tidyselect", "vctrs"))
install.packages(c("backports", "ellipsis", "glue", "pillar", "pkgbuild", "ps", "scales", "tidyr", "tidyselect", "vctrs"))
install.packages(c("backports", "ellipsis", "glue", "pillar", "pkgbuild", "ps", "scales", "tidyr", "tidyselect", "vctrs"))
install.packages(c("ellipsis", "glue", "vctrs"))
install.packages(c("ellipsis", "glue", "vctrs"))
install.packages(c("ellipsis", "glue", "vctrs"))
install.packages(c("ellipsis", "glue", "vctrs"))
install.packages(c("ellipsis", "glue", "vctrs"))
getwd()
devtools::install()
devtools::document()
devtools::build()
library(MAVEn)
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
maven_raw <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = T)
setwd("../maven_test/")
maven_raw <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = T)
plot_maven_overview(maven_raw)
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::install()
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
setwd("C:/Users/Megan/github_DAPPER/MAVEn/doc")
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
maven_raw <- read_maven(datadir = "../inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = T)
tibble(maven_raw)
options(repos = c(CRAN = "http://cran.rstudio.com"))
depend <- c("ggplot2", "pander", "tidyr")
ndepend <- length(depend)
present <- installed.packages()[, "Package"]
needed <- depend[!(depend %in% present)]
n_needed <- length(needed)
if (n_needed > 0) {
install.packages(needed)
}
for (i in 1:ndepend) {
suppressMessages(eval(bquote(library(.(depend[i])))))
}
library(MAVEn)
maven_raw <- read_maven(datadir = "../inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = T)
tibble(maven_raw)
plot_maven_overview(maven_raw, maven_experiment = "maven.example1")
maven <- read_maven(datadir = "../inst/extdata/",
maven_datafile = "./maven_output.csv", baseline = F)
tibble(maven)
maven_cycle <- assign_cyclenumber(maven)
tibble(maven_cycle)
animal_metabolism <- extract_metabolism(maven_cycle)
tibble(animal_metabolism)
metabolism_trend(animal_metabolism)
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
metabolism_diag(maven_raw, metabolism_summary_cycle)
animal_activity <- extract_activity(maven_cycle, metabolism_summary_cycle)
tibble(animal_activity)
activity_trend(animal_activity)
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
activity_summary_chamber <- summarize_activity(animal_activity,
type = "by_chamber")
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle)
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::document()
devtools::install()
devtools::build_vignettes()
devtools::build()
install.packages("Rcpp")
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::build_vignettes()
library(MAVEn)
?extract_activity()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::document()
devtools::build_vignettes()
devtools::install()
devtools::document()
devtools::build_vignettes()
devtools::install()
devtools::document()
devtools::build_vignettes()
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::install()
devtools::build_vignettes()
devtools::document()
devtools::build()
devtools::build()
devtools::check()
devtools::check()
?setNames
devtools::document()
devtools::check()
devtools::load_all()
devtools::load_all()
experiment_name <- "maven_output"
activity_interval <- 60
activity_baseline_value <- 0.01
maven_raw <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = T)
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
maven_raw <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = T)
setwd("C:/Users/Megan/github_DAPPER/maven_test/")
maven_raw <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = T)
plot_maven_overview(maven_raw)
maven <- read_maven(datadir = "data",
maven_datafile = "maven_output.csv", baseline = F)
maven_cycle <- assign_cyclenumber(maven)
animal_metabolism <- extract_metabolism(maven_cycle)
metabolism_trend(animal_metabolism, maven_experiment = experiment_name)
metabolism_summary_cycle <- summarize_metabolism(animal_metabolism,
type = "by_cycle")
metabolism_summary_chamber <- summarize_metabolism(animal_metabolism,
type = "by_chamber")
metabolism_diag(maven_raw, metabolism_summary_cycle,
maven_experiment = experiment_name)
animal_activity <- extract_activity(maven_cycle, metabolism_summary_cycle,
interval = activity_interval,
activity_baseline = activity_baseline_value)
activity_trend(animal_activity, maven_experiment = experiment_name)
activity_trend(animal_activity, maven_experiment = experiment_name)
devtools::load_all()
devtools::load_all("../MAVEn/")
activity_trend(animal_activity, maven_experiment = experiment_name,
activity_baseline = activity_baseline_value)
# Step 7: Generate animal activity summary tables ----
#
# There is currently no calculation for the abs difference sum, but that can be
# added into the pipeline.
activity_summary_cycle <- summarize_activity(animal_activity,
type = "by_cycle",
activity_threshold = 1)
# Step 8: Visual diagnostic of animal activity ----
activity_diag(maven_raw, metabolism_summary_cycle, activity_summary_cycle,
interval = activity_interval)
test.out <- maven_datatable(metabolism_summary_cycle, activity_summary_cycle)
test.out
setwd("C:/Users/Megan/github_DAPPER/MAVEn")
devtools::install()
devtools::document()
devtools::build_vignettes()
devtools::build()
devtools::check()
source("https://install-github.me/r-lib/rcmdcheck")
devtools::check()
devtools::install()
devtools::document()
devtools::check()
Sys.info()
R.version.string
R.Version()
sessionInfo()
getwd()
devtools::install()
devtools::document()
devtools::build()
devtools::check()
